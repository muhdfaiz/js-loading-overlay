{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js-loading-overlay.js"],"names":["JSLoadingOverlay","options","stylesheetBaseURL","spinner","spinnerStylesheetURL","numberOfEmptyDivForSpinner","originalBodyPosition","originalBodyTop","originalBodywidth","setOptions","addSpinnerStylesheet","generateSpinnerElement","lockScroll","document","body","style","overflow","documentElement","generateAndAddOverlayElement","stylesheet","getElementById","disabled","parentNode","removeChild","overlayIDName","remove","spinnerIDName","key","left","offsetX","top","offsetY","containerID","contains","loadingOverlay","overlayOpacity","overlayBackgroundColor","position","insertAdjacentHTML","emptyDivKey","Object","keys","find","element","spinnerIcon","emptyDivElement","generateEmptyDivElement","spinnerColor","spinnerSize","setSpinnerStylesheetURL","link","createElement","setAttribute","getElementsByTagName","appendChild","numberOfEmptyDiv","i","window","JsLoadingOverlay","module","exports"],"mappings":"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","file":"dist/js-loading-overlay.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","class JSLoadingOverlay\n{\n    constructor() {\n        this.options = {\n            'overlayBackgroundColor': '#666666',\n            'overlayOpacity': 0.6,\n            'spinnerIcon': 'ball-circus',\n            'spinnerColor': '#000',\n            'spinnerSize': '3x',\n            'overlayIDName': 'overlay',\n            'spinnerIDName': 'spinner',\n            'offsetY': 0,\n            'offsetX': 0,\n            'lockScroll': false,\n            'containerID': null,\n        };\n        this.stylesheetBaseURL = 'https://cdn.jsdelivr.net/npm/load-awesome@1.1.0/css/';\n        this.spinner = null;\n        this.spinnerStylesheetURL = null;\n        this.numberOfEmptyDivForSpinner = {\n            'ball-8bits' : 16,\n            'ball-atom': 4,\n            'ball-beat': 3,\n            'ball-circus': 5,\n            'ball-climbing-dot': 1,\n            'ball-clip-rotate': 1,\n            'ball-clip-rotate-multiple': 2,\n            'ball-clip-rotate-pulse': 2,\n            'ball-elastic-dots': 5,\n            'ball-fall': 3,\n            'ball-fussion': 4,\n            'ball-grid-beat': 9,\n            'ball-grid-pulse': 9,\n            'ball-newton-cradle': 4,\n            'ball-pulse': 3,\n            'ball-pulse-rise': 5,\n            'ball-pulse-sync': 3,\n            'ball-rotate': 1,\n            'ball-running-dots': 5,\n            'ball-scale': 1,\n            'ball-scale-multiple': 3,\n            'ball-scale-pulse': 2,\n            'ball-scale-ripple': 1,\n            'ball-scale-ripple-multiple': 3,\n            'ball-spin': 8,\n            'ball-spin-clockwise' : 8,\n            'ball-spin-clockwise-fade' : 8,\n            'ball-spin-clockwise-fade-rotating' : 8,\n            'ball-spin-fade' : 8,\n            'ball-spin-fade-rotating' : 8,\n            'ball-spin-rotate' : 2,\n            'ball-square-clockwise-spin' : 8,\n            'ball-square-spin' : 8,\n            'ball-triangle-path' : 3,\n            'ball-zig-zag' : 2,\n            'ball-zig-zag-deflect' : 2,\n            'cog' : 1,\n            'cube-transition' : 2,\n            'fire' : 3,\n            'line-scale' : 5,\n            'line-scale-party' : 5,\n            'line-scale-pulse-out' : 5,\n            'line-scale-pulse-out-rapid' : 5,\n            'line-spin-clockwise-fade' : 8,\n            'line-spin-clockwise-fade-rotating' : 8,\n            'line-spin-fade' : 8,\n            'line-spin-fade-rotating' : 8,\n            'pacman' : 6,\n            'square-jelly-box' : 2,\n            'square-loader' : 1,\n            'square-spin' : 1,\n            'timer' : 1,\n            'triangle-skew-spin' : 1,\n        }\n\n        this.originalBodyPosition = '';\n        this.originalBodyTop = '';\n        this.originalBodywidth = '';\n    }\n\n    /**\n     * Show loading overlay including the spinner.\n     *\n     * @param options\n     */\n    show(options) {\n        // Override default options if options parameter exist.\n        this.setOptions(options);\n\n        // Add spinner stylesheet from https://cdn.jsdelivr.net in head.\n        this.addSpinnerStylesheet();\n\n        // Generate spinner html element.\n        this.generateSpinnerElement();\n\n        if (this.options.lockScroll) {\n            document.body.style.overflow = 'hidden';\n            document.documentElement.style.overflow = 'hidden';\n        }\n\n        // Generate overlay html element in full page.\n        this.generateAndAddOverlayElement();\n    }\n\n    hide() {\n        // Unlock scroll.\n        if (this.options.lockScroll) {\n            document.body.style.overflow = '';\n            document.documentElement.style.overflow = '';\n        }\n\n        var stylesheet = document.getElementById('loading-overlay-stylesheet');\n\n        if (stylesheet) {\n            stylesheet.disabled = true;\n            stylesheet.parentNode.removeChild(stylesheet);\n\n            document.getElementById(this.options.overlayIDName).remove();\n            document.getElementById(this.options.spinnerIDName).remove();\n        }\n    }\n\n    /**\n     * Override default options with user specified options.\n     *\n     * @param options\n     */\n    setOptions(options) {\n        if (typeof options !== 'undefined') {\n            for (let key in options) {\n                this.options[key] = options[key];\n            }\n        }\n    }\n\n    /**\n     * Generate overlay html element in full page.\n     * - class name\n     * - background color\n     * - opacity\n     *\n     * @returns {string}\n     */\n    generateAndAddOverlayElement() {\n        let left = '50%';\n        // Check if spinner X offset not zero\n        if (this.options.offsetX !== 0) {\n            left = 'calc(50% + ' + this.options.offsetX + ')'\n        }\n\n        let top = '50%';\n        // Check if spinner Y offset not zero\n        if (this.options.offsetY !== 0) {\n            top = 'calc(50% + ' + this.options.offsetY + ')'\n        }\n\n        // Generate overlay html element in container.\n        if (this.options.containerID && document.body.contains(document.getElementById(this.options.containerID))) {\n            let loadingOverlay = `<div id=\"${this.options.overlayIDName}\" style=\"display: block !important; position: absolute; top: 0; left: 0; overflow: auto; opacity: ${this.options.overlayOpacity}; background: ${this.options.overlayBackgroundColor}; z-index: 50; width: 100%; height: 100%;\"></div><div id=\"${this.options.spinnerIDName}\" style=\"display: block !important; position: absolute; top: ${top}; left: ${left}; -webkit-transform: translate(-50%); -ms-transform: translate(-50%); transform: translate(-50%); z-index: 9999;\">${this.spinner}</div>`\n\n            let containerID = document.getElementById(this.options.containerID);\n\n            containerID.style.position = 'relative';\n            containerID.insertAdjacentHTML('beforeend', loadingOverlay);\n            return;\n        }\n\n        let loadingOverlay = `<div id=\"${this.options.overlayIDName}\" style=\"display: block !important; position: fixed; top: 0; left: 0; overflow: auto; opacity: ${this.options.overlayOpacity}; background: ${this.options.overlayBackgroundColor}; z-index: 50; width: 100%; height: 100%;\"></div><div id=\"${this.options.spinnerIDName}\" style=\"display: block !important; position: fixed; top: ${top}; left: ${left}; -webkit-transform: translate(-50%); -ms-transform: translate(-50%); transform: translate(-50%); z-index: 9999;\">${this.spinner}</div>`\n\n        // Insert the overlay html element in body.\n        document.body.insertAdjacentHTML(\"beforeend\", loadingOverlay);\n    }\n\n    /**\n     * Generate spinner html element. Spinner html element must follow template from https://github.danielcardoso.net/load-awesome/\n     */\n    generateSpinnerElement()\n    {\n        let emptyDivKey = Object.keys(this.numberOfEmptyDivForSpinner).find(element => element === this.options.spinnerIcon);\n\n        let emptyDivElement = this.generateEmptyDivElement(this.numberOfEmptyDivForSpinner[emptyDivKey]);\n\n        this.spinner = `<div style=\"color: ${this.options.spinnerColor}\" class=\"la-${ this.options.spinnerIcon } la-${this.options.spinnerSize}\">${ emptyDivElement }</div>`\n    }\n\n    /**\n     * Add spinner stylesheet tag in head section.\n     * All stylesheet URL are from CDN. Using Load Awesome CSS Spinner.\n     *\n     * @see https://github.danielcardoso.net/load-awesome/\n     * @see https://www.jsdelivr.com/package/npm/load-awesome?path=css\n     */\n    addSpinnerStylesheet() {\n        this.setSpinnerStylesheetURL();\n\n        let link = document.createElement('link');\n        link.setAttribute('id', 'loading-overlay-stylesheet');\n        link.setAttribute('rel', 'stylesheet');\n        link.setAttribute('type', 'text/css');\n        link.setAttribute('href', this.spinnerStylesheetURL);\n\n        document.getElementsByTagName('head')[0].appendChild(link);\n    }\n\n    /**\n     * Set spinner stylesheet based on the icon specify in options.\n     * All stylesheet URL are from CDN. Using Load Awesome CSS Spinner.\n     *\n     * @see https://github.danielcardoso.net/load-awesome/\n     * @see https://www.jsdelivr.com/package/npm/load-awesome?path=css\n     *\n     * @returns {string}\n     */\n    setSpinnerStylesheetURL() {\n        this.spinnerStylesheetURL = this.stylesheetBaseURL + this.options.spinnerIcon + '.min.css'\n    }\n\n    /**\n     * Generate empty div element for spinner element.\n     *\n     * @param numberOfEmptyDiv\n     * @returns {string}\n     */\n    generateEmptyDivElement(numberOfEmptyDiv) {\n        let emptyDivElement = '';\n\n        for (let i=1; i <= numberOfEmptyDiv; i++) {\n            emptyDivElement += '<div></div>'\n        }\n\n        return emptyDivElement;\n    }\n}\n\nwindow.JsLoadingOverlay = new JSLoadingOverlay();\n\nmodule.exports = JsLoadingOverlay;"],"sourceRoot":""}